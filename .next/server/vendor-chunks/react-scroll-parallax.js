"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/react-scroll-parallax";
exports.ids = ["vendor-chunks/react-scroll-parallax"];
exports.modules = {

/***/ "(ssr)/./node_modules/react-scroll-parallax/dist/react-scroll-parallax.esm.js":
/*!******************************************************************************!*\
  !*** ./node_modules/react-scroll-parallax/dist/react-scroll-parallax.esm.js ***!
  \******************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   EasingPreset: () => (/* reexport safe */ parallax_controller__WEBPACK_IMPORTED_MODULE_0__.EasingPreset),\n/* harmony export */   Parallax: () => (/* binding */ Parallax),\n/* harmony export */   ParallaxBanner: () => (/* binding */ ParallaxBanner),\n/* harmony export */   ParallaxBannerLayer: () => (/* binding */ ParallaxBannerLayer),\n/* harmony export */   ParallaxContext: () => (/* binding */ ParallaxContext),\n/* harmony export */   ParallaxProvider: () => (/* binding */ ParallaxProvider),\n/* harmony export */   useParallax: () => (/* binding */ useParallax),\n/* harmony export */   useParallaxController: () => (/* binding */ useParallaxController)\n/* harmony export */ });\n/* harmony import */ var parallax_controller__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! parallax-controller */ \"(ssr)/./node_modules/parallax-controller/dist/parallax-controller.esm.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"(ssr)/./node_modules/next/dist/server/future/route-modules/app-page/vendored/ssr/react.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n\n\n\nfunction _extends() {\n    _extends = Object.assign || function(target) {\n        for(var i = 1; i < arguments.length; i++){\n            var source = arguments[i];\n            for(var key in source){\n                if (Object.prototype.hasOwnProperty.call(source, key)) {\n                    target[key] = source[key];\n                }\n            }\n        }\n        return target;\n    };\n    return _extends.apply(this, arguments);\n}\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n    if (source == null) return {};\n    var target = {};\n    var sourceKeys = Object.keys(source);\n    var key, i;\n    for(i = 0; i < sourceKeys.length; i++){\n        key = sourceKeys[i];\n        if (excluded.indexOf(key) >= 0) continue;\n        target[key] = source[key];\n    }\n    return target;\n}\nfunction removeUndefinedObjectKeys(obj) {\n    Object.keys(obj).forEach(function(key) {\n        return obj[key] === undefined && delete obj[key];\n    });\n    return obj;\n}\nvar _excluded = [\n    \"disabled\",\n    \"easing\",\n    \"endScroll\",\n    \"onChange\",\n    \"onEnter\",\n    \"onExit\",\n    \"onProgressChange\",\n    \"opacity\",\n    \"rootMargin\",\n    \"rotate\",\n    \"rotateX\",\n    \"rotateY\",\n    \"rotateZ\",\n    \"scale\",\n    \"scaleX\",\n    \"scaleY\",\n    \"scaleZ\",\n    \"shouldAlwaysCompleteAnimation\",\n    \"shouldDisableScalingTranslations\",\n    \"speed\",\n    \"startScroll\",\n    \"targetElement\",\n    \"translateX\",\n    \"translateY\"\n];\nfunction getIsolatedParallaxProps(props) {\n    var disabled = props.disabled, easing = props.easing, endScroll = props.endScroll, onChange = props.onChange, onEnter = props.onEnter, onExit = props.onExit, onProgressChange = props.onProgressChange, opacity = props.opacity, rootMargin = props.rootMargin, rotate = props.rotate, rotateX = props.rotateX, rotateY = props.rotateY, rotateZ = props.rotateZ, scale = props.scale, scaleX = props.scaleX, scaleY = props.scaleY, scaleZ = props.scaleZ, shouldAlwaysCompleteAnimation = props.shouldAlwaysCompleteAnimation, shouldDisableScalingTranslations = props.shouldDisableScalingTranslations, speed = props.speed, startScroll = props.startScroll, targetElement = props.targetElement, translateX = props.translateX, translateY = props.translateY, rest = _objectWithoutPropertiesLoose(props, _excluded);\n    var parallaxProps = removeUndefinedObjectKeys({\n        disabled: disabled,\n        easing: easing,\n        endScroll: endScroll,\n        onChange: onChange,\n        onEnter: onEnter,\n        onExit: onExit,\n        onProgressChange: onProgressChange,\n        opacity: opacity,\n        rootMargin: rootMargin,\n        rotate: rotate,\n        rotateX: rotateX,\n        rotateY: rotateY,\n        rotateZ: rotateZ,\n        scale: scale,\n        scaleX: scaleX,\n        scaleY: scaleY,\n        scaleZ: scaleZ,\n        shouldAlwaysCompleteAnimation: shouldAlwaysCompleteAnimation,\n        shouldDisableScalingTranslations: shouldDisableScalingTranslations,\n        speed: speed,\n        startScroll: startScroll,\n        targetElement: targetElement,\n        translateX: translateX,\n        translateY: translateY\n    });\n    return {\n        parallaxProps: parallaxProps,\n        rest: rest\n    };\n}\nfunction useVerifyController(controller) {\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(function() {\n        var isServer = \"undefined\" === \"undefined\"; // Make sure the provided controller is an instance of the Parallax Controller\n        var isInstance = controller instanceof parallax_controller__WEBPACK_IMPORTED_MODULE_0__.ParallaxController; // Throw if neither context or global is available\n        if (!isServer && !controller && !isInstance) {\n            throw new Error(\"Must wrap your application's <Parallax /> components in a <ParallaxProvider />.\");\n        }\n    }, [\n        controller\n    ]);\n}\nvar ParallaxContext = /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_1___default().createContext(null);\nfunction useParallaxController() {\n    var parallaxController = (0,react__WEBPACK_IMPORTED_MODULE_1__.useContext)(ParallaxContext);\n    var isServer = \"undefined\" === \"undefined\";\n    if (isServer) {\n        return null;\n    }\n    if (!parallaxController) {\n        throw new Error(\"Could not find `react-scroll-parallax` context value. Please ensure the component is wrapped in a <ParallaxProvider>\");\n    }\n    return parallaxController;\n}\nfunction useParallax(props) {\n    var controller = useParallaxController();\n    var ref = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(null);\n    var _getIsolatedParallaxP = getIsolatedParallaxProps(props), parallaxProps = _getIsolatedParallaxP.parallaxProps;\n    useVerifyController(controller);\n    var _useState = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(), element = _useState[0], setElement = _useState[1]; // create element\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(function() {\n        var newElement;\n        if (ref.current instanceof HTMLElement) {\n            var options = {\n                el: ref.current,\n                props: parallaxProps\n            };\n            newElement = controller == null ? void 0 : controller.createElement(options);\n            setElement(newElement);\n        } else {\n            throw new Error(\"You must assign the ref returned by the useParallax() hook to an HTML Element.\");\n        }\n        return function() {\n            if (newElement) {\n                controller == null ? void 0 : controller.removeElementById(newElement.id);\n            }\n        };\n    }, []); // update element\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(function() {\n        if (element) {\n            if (props.disabled) {\n                controller == null ? void 0 : controller.resetElementStyles(element);\n                controller == null ? void 0 : controller.updateElementPropsById(element.id, parallaxProps);\n            } else {\n                controller == null ? void 0 : controller.updateElementPropsById(element.id, parallaxProps);\n            }\n        }\n    }, [\n        props.disabled,\n        props.easing,\n        props.endScroll,\n        props.onChange,\n        props.onEnter,\n        props.onExit,\n        props.onProgressChange,\n        props.opacity,\n        props.rootMargin,\n        props.rotate,\n        props.rotateX,\n        props.rotateY,\n        props.rotateZ,\n        props.scale,\n        props.scaleX,\n        props.scaleY,\n        props.scaleZ,\n        props.shouldAlwaysCompleteAnimation,\n        props.shouldDisableScalingTranslations,\n        props.speed,\n        props.startScroll,\n        props.targetElement,\n        props.translateX,\n        props.translateY\n    ]);\n    return {\n        ref: ref,\n        controller: controller,\n        element: element\n    };\n}\nfunction Parallax(props) {\n    var _getIsolatedParallaxP = getIsolatedParallaxProps(props), parallaxProps = _getIsolatedParallaxP.parallaxProps, rest = _getIsolatedParallaxP.rest;\n    var _useParallax = useParallax(parallaxProps), ref = _useParallax.ref;\n    return /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_1___default().createElement(\"div\", Object.assign({\n        ref: ref\n    }, rest), props.children);\n}\nvar FALLBACK_RECT = {\n    height: 0\n};\nfunction getExpandedStyle(layer) {\n    if (Array.isArray(layer.translateY)) {\n        var translateYStart = (0,parallax_controller__WEBPACK_IMPORTED_MODULE_0__.parseValueAndUnit)(layer.translateY[0]);\n        var translateYEnd = (0,parallax_controller__WEBPACK_IMPORTED_MODULE_0__.parseValueAndUnit)(layer.translateY[1]);\n        if (translateYStart.unit === \"px\" && translateYEnd.unit === \"px\") {\n            return {\n                top: Math.abs(translateYEnd.value) * -1 + \"px\",\n                bottom: Math.abs(translateYStart.value) * -1 + \"px\"\n            };\n        }\n        if (translateYStart.unit === \"%\" && translateYEnd.unit === \"%\") {\n            var _layer$targetElement$, _layer$targetElement;\n            var clientRect = (_layer$targetElement$ = (_layer$targetElement = layer.targetElement) == null ? void 0 : _layer$targetElement.getBoundingClientRect()) != null ? _layer$targetElement$ : FALLBACK_RECT;\n            var top = Math.abs(clientRect.height * 0.01 * translateYEnd.value) * -1;\n            var bottom = Math.abs(clientRect.height * 0.01 * translateYStart.value) * -1;\n            return {\n                top: top + \"px\",\n                bottom: bottom + \"px\"\n            };\n        }\n    }\n    if (layer.speed) {\n        var speed = layer.speed || 0;\n        var absSpeed = Math.abs(speed) * 10 * -1;\n        return {\n            top: absSpeed + \"px\",\n            bottom: absSpeed + \"px\"\n        };\n    }\n    return {};\n}\nfunction getImageStyle(layer) {\n    return layer.image ? {\n        backgroundImage: \"url(\" + layer.image + \")\",\n        backgroundPosition: \"center\",\n        backgroundSize: \"cover\"\n    } : {};\n}\nvar _excluded$1 = [\n    \"children\",\n    \"disabled\",\n    \"style\",\n    \"expanded\",\n    \"image\",\n    \"testId\"\n];\nvar absoluteStyle = {\n    position: \"absolute\",\n    top: 0,\n    left: 0,\n    right: 0,\n    bottom: 0\n};\nvar ParallaxBannerLayer = function ParallaxBannerLayer(props) {\n    var _getIsolatedParallaxP = getIsolatedParallaxProps(props), parallaxProps = _getIsolatedParallaxP.parallaxProps, rest = _getIsolatedParallaxP.rest;\n    var style = rest.style, _rest$expanded = rest.expanded, expanded = _rest$expanded === void 0 ? true : _rest$expanded, testId = rest.testId, divProps = _objectWithoutPropertiesLoose(rest, _excluded$1);\n    var imageStyle = getImageStyle(props);\n    var expandedStyle = expanded ? getExpandedStyle(props) : {};\n    var parallax = useParallax(_extends({\n        targetElement: props.targetElement,\n        shouldDisableScalingTranslations: true\n    }, parallaxProps));\n    return /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_1___default().createElement(\"div\", Object.assign({\n        \"data-testid\": testId,\n        ref: parallax.ref,\n        style: _extends({}, imageStyle, absoluteStyle, expandedStyle, style)\n    }, divProps), rest.children);\n};\nvar _excluded$2 = [\n    \"disabled\",\n    \"style\",\n    \"layers\"\n];\nvar containerStyle = {\n    position: \"relative\",\n    overflow: \"hidden\",\n    width: \"100%\"\n};\nvar ParallaxBanner = function ParallaxBanner(props) {\n    var _useState = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(null), targetElement = _useState[0], setTargetElement = _useState[1];\n    var containerRef = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(null);\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(function() {\n        setTargetElement(containerRef.current);\n    }, []);\n    var rootStyle = props.style, _props$layers = props.layers, layers = _props$layers === void 0 ? [] : _props$layers, rootRest = _objectWithoutPropertiesLoose(props, _excluded$2);\n    function renderLayers() {\n        if (targetElement) {\n            var shouldUseLayers = layers && layers.length > 0;\n            if (shouldUseLayers) {\n                return layers.map(function(layer, i) {\n                    return /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_1___default().createElement(ParallaxBannerLayer, Object.assign({}, layer, {\n                        targetElement: targetElement,\n                        key: \"layer-\" + i,\n                        testId: \"layer-\" + i\n                    }));\n                });\n            }\n        }\n        return null;\n    }\n    function renderChildren() {\n        if (targetElement) {\n            return react__WEBPACK_IMPORTED_MODULE_1___default().Children.map(props.children, function(child) {\n                var item = child; // adds the targetElement prop to any ParallaxBannerLayer components\n                if ((item == null ? void 0 : item.type) === ParallaxBannerLayer) {\n                    var clone = /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_1___default().cloneElement(item, {\n                        targetElement: targetElement\n                    });\n                    return clone;\n                }\n                return child;\n            });\n        }\n        return null;\n    }\n    return /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_1___default().createElement(\"div\", Object.assign({\n        ref: containerRef,\n        style: _extends({}, containerStyle, rootStyle)\n    }, rootRest), renderLayers(), renderChildren());\n};\nvar createController = function createController(options) {\n    // Don't initialize on the server\n    var isServer = \"undefined\" === \"undefined\";\n    if (!isServer) {\n        // Must not be the server so kick it off...\n        return parallax_controller__WEBPACK_IMPORTED_MODULE_0__.ParallaxController.init(options);\n    }\n    return null;\n};\nfunction ParallaxProvider(props) {\n    var controller = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(null);\n    if (!controller.current) {\n        controller.current = createController({\n            scrollAxis: props.scrollAxis || parallax_controller__WEBPACK_IMPORTED_MODULE_0__.ScrollAxis.vertical,\n            scrollContainer: props.scrollContainer,\n            disabled: props.isDisabled\n        });\n    } // update scroll container\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(function() {\n        if (props.scrollContainer && controller.current) {\n            controller.current.updateScrollContainer(props.scrollContainer);\n        }\n    }, [\n        props.scrollContainer,\n        controller.current\n    ]); // disable/enable parallax\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(function() {\n        if (props.isDisabled && controller.current) {\n            controller.current.disableParallaxController();\n        }\n        if (!props.isDisabled && controller.current) {\n            controller.current.enableParallaxController();\n        }\n    }, [\n        props.isDisabled,\n        controller.current\n    ]); // remove the controller when unmounting\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(function() {\n        return function() {\n            (controller == null ? void 0 : controller.current) && (controller == null ? void 0 : controller.current.destroy());\n        };\n    }, []);\n    return /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_1___default().createElement(ParallaxContext.Provider, {\n        value: controller.current\n    }, props.children);\n}\n //# sourceMappingURL=react-scroll-parallax.esm.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/react-scroll-parallax/dist/react-scroll-parallax.esm.js\n");

/***/ })

};
;